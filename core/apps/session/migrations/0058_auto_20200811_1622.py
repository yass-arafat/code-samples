# Generated by Django 3.0 on 2020-08-11 10:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('garmin', '0009_auto_20200811_1622'),
        ('user_auth', '0013_merge_20200804_1207'),
        ('session', '0057_auto_20200809_1326'),
    ]

    operations = [
        migrations.CreateModel(
            name='SessionScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sqs_today_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('prs_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('overall_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('duration_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('sqs_session_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('pss_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Session Score Table',
                'db_table': 'session_score',
            },
        ),
        migrations.RemoveField(
            model_name='usersession',
            name='is_completed',
        ),
        migrations.CreateModel(
            name='PlannedSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2550)),
                ('pad_time_in_seconds', models.IntegerField(blank=True, default=0, null=True)),
                ('pad_pss', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=20, null=True)),
                ('is_pad_applicable', models.BooleanField(blank=True, default=False, null=True)),
                ('zone_focus', models.IntegerField()),
                ('session_date_time', models.DateTimeField()),
                ('day_code', models.UUIDField(editable=False, help_text='Unique day code for each day', null=True)),
                ('session_code', models.UUIDField(editable=False, help_text='Unique Session code for each planned session', null=True)),
                ('planned_duration', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('planned_pss', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('planned_load', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('planned_acute_load', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('planned_intensity', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('description', models.TextField(help_text='User Session description')),
                ('planned_time_in_power_zone', models.TextField(blank=True, help_text='Actual Time in zones in power data', null=True)),
                ('planned_time_in_hr_zone', models.TextField(blank=True, help_text='Actual Time in zones in heart rate data', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(blank=True, help_text='session from truth table', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planned_sessions', to='session.Session')),
                ('session_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planned_sessions', to='session.SessionType')),
                ('user_auth', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planned_sessions', to='user_auth.UserAuthModel')),
            ],
            options={
                'verbose_name': 'User Planned Session Table',
                'db_table': 'planned_session',
            },
        ),
        migrations.CreateModel(
            name='ActualSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_date_time', models.DateTimeField()),
                ('day_code', models.UUIDField(editable=False, help_text='Unique day code for each day', null=True)),
                ('actual_duration', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('actual_pss', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('actual_load', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('actual_acute_load', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('actual_intensity', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('actual_distance_in_meters', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('session_code', models.UUIDField(editable=False, help_text='Unique Session code for each planned session', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('garmin_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actual_session', to='garmin.GarminData')),
                ('session_score', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actual_session', to='session.SessionScore')),
                ('user_auth', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actual_sessions', to='user_auth.UserAuthModel')),
            ],
            options={
                'verbose_name': 'User Actual Session Data Table',
                'db_table': 'actual_session',
            },
        ),
    ]
